// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}


// prisma/schema.prisma
datasource db {
  provider  = "mongodb"
  url  	    = env("DATABASE_URL")
  // uncomment next line if you use Prisma <5.10
  // directUrl = env("DATABASE_URL_UNPOOLED")
}


enum Status {
  ACTIVE
  INACTIVE
  COMPLETED
  DELETED
}


model Item {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String

  title       String
  description String
  images      String[]
  status      Status   @default(ACTIVE)
  startingPrice Float
  instandBuyPrice Float

  currentBid  Float     @default(0)
  bidInterval Float    @default(100)
 


  createdAt   DateTime  @default(now())
  auction     Auction?


}

model Auction {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  slug        String   @unique
  
  startDate   DateTime @default(now())
  endDate     DateTime 
  
  //relation
  item       Item      @relation(fields: [itemId], references: [id])
  itemId      String   @unique @db.ObjectId
  bids        Bid[]
}

model Bid {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId      String
  userName    String

  amount      Float

  createdAt   DateTime  @default(now())
  

  auctionId   String   @db.ObjectId
  auction     Auction   @relation(fields: [auctionId], references: [id])

  @@index([auctionId], name: "auctionId")

  
}